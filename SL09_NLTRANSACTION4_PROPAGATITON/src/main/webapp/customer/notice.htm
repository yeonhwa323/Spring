[ notice.htm ]

Ctrl + F11

p522 
2. 선언적 트랜잭션 처리 *****
 1) 설정파일 사용. 
 		<tx:advice>
 	
**** p524 2) @Transactional 애노테이션 사용.

---------------------------------------------------------------------------------
[p511] 트랜잭션 전파와 격리 레벨

@T
 [             insertAndPointUpOfMember()	]
 		// 1) insert() o + 2) update() x	
 		// 1) insert() O + 2) insert()	X
 		전체 취소 -> 롤백

 					point = 1;
@T
insert() {
	// A. 쓰기         insert
	// B. 포인트 증가  update
} 		

 [             insertAndPointUpOfMember()	]
 			 @T[1) insert()] + @T[2) insert()]
 		        A				A
 				B  point=2		B CK에러
 => 이유?
 	동일한 클래스(NoticeDaoImpl) 안에서 
 	다른 메서드를 호출하는 구조로는
 	insertAndPointUpOfMember() -> insert()
 	AOP 방식으로 트랜잭션이 처리되지 않는다.
 	 
 => 해결방법?
 	insertAndPointUpOfMember() 서비스라는 별도의 클래스를
 	만들어서 트랜잭션 처리를 하면 된다.
 	
 	BoardService 클래스를 별도.
 	
 	게시글의 상세보기
 	1) 게시글 가져오는 쿼리 BoardDao
 	2) 조회수 증가	   쿼리 BoardDao
 		
 	서비스클래스
 	org.doit.ik.MemberShipService
 	org.doit.ik.MemberShipServiceImpl
 	
 	@T (X)
 	msi.insertAndPointUpOfMember
 		@T (O)
 		nd.insert()		A + B 작업수행
 		
 		@T (O)
 		nd.insert()		A + B 작업수행
 	
  @T (O)	
  [             insertAndPointUpOfMember()	]		
  		@T(insert())        @T(insert)
  					T A 작업
  		  			  B 
  		
  
  
  
  
  
  
  
  
  
  