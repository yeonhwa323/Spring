<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.doit.ik.mapper.NoticeMapper">
 <!--  public int getCount(String field, String query) throws ClassNotFoundException, SQLException;
	 -->
	 <select id="getCount" resultType="Integer">
	 	SELECT COUNT(*) CNT FROM NOTICES WHERE ${param1} LIKE '%${param2}%'
	 </select>
	 <!-- public List<NoticeVO> getNotices(int page , String field , String query) throws ClassNotFoundException, SQLException
	 -->
	 <select id="getNotices" resultType="NoticeVO">
	 
		SELECT *  FROM (  SELECT ROWNUM NUM, N.* FROM 
		( SELECT *   FROM NOTICES   WHERE ${param2}  LIKE '%${param3}%'   ORDER BY REGDATE DESC  ) N ) 
		 WHERE NUM BETWEEN 1 + (${param1}-1)*15 AND 15 + (${param1}-1)*15
		
	 </select>
	<!--  public int delete(String seq) throws ClassNotFoundException, SQLException;
	 -->
	 <delete id="delete">
	 	DELETE NOTICES WHERE SEQ= #{seq}
	 </delete>
	 
	 <!-- public int update(NoticeVO notice) throws ClassNotFoundException, SQLException{
	 --> <!-- 자동으로 저 객체안의 필드명을 읽어와줌 -->
	 
	 <update id="update">
	 	UPDATE NOTICES SET TITLE=#{title}, CONTENT=#{content} <if test="filesrc !=null">, FILESRC=#{firesrc}</if> WHERE SEQ=#{seq}
	 </update>
	 
	 <!-- public int insert(NoticeVO notice) throws ClassNotFoundException, SQLException {
	 -->
	  <insert id="insert">
      <selectKey order="BEFORE" resultType="String"
         keyProperty="seq">
         SELECT NVL(MAX(TO_NUMBER(SEQ)),0)+1 
         FROM NOTICES
      </selectKey>
      INSERT INTO NOTICES
      ( SEQ, TITLE, CONTENT, WRITER, REGDATE, HIT, FILESRC)
      VALUES
      ( #{ seq } , #{ title } , #{ content }, #{ writer }, SYSDATE, 0,
      #{filesrc, javaType=String, jdbcType=VARCHAR} )
   </insert>

   <!-- void hitUp(String seq); -->
   <update id="hitup">
      UPDATE notices
      SET hit = hit + 1
      WHERE seq = #{ seq }
   </update>

   <!-- int getHit(String seq); -->
   <select id="gethit" resultType="Integer">
      SELECT hit
      FROM notices
      WHERE seq = #{ seq }
   </select>
   
    <select id="getNotice" resultType="org.doit.ik.domain.NoticeVO">
         SELECT * 
       FROM NOTICES 
       WHERE SEQ= #{seq}
     </select>
     
</mapper>


<!-- https://madplay.github.io/post/difference-between-dollar-sign-and-sharp-sign-in-mybatis

 [ #{} ]

파라미터가 String 형태로 들어와 자동적으로 '파라미터'형태가 된다.

예를 들어, #{user_id}의 user_id 의 값이 abc 라면 쿼리문에는 USER_ID = 'abc'의 형태가 된다.

★쿼리 주입을 예방할 수 있어 보안 측면에서 유리하다.★

PreparedStatement 를 생성하게 되는데, 파싱된 쿼리문은 재활용(캐싱)되기 때문에 효율적이다.

​

[ ${} ]

파라미터가 바로 출력된다.

해당 컬럼의 자료형에 맞추어 파라미터의 자료형이 변경된다.

쿼리 주입을 예방할 수 없어 보안측면에서 불리하다
. 그러므로 사용자의 입력을 전달할 때는 사용하지 않는 편이 낫다.

테이블이나 컬럼명을 파라미터로 전달하고 싶을 때 사용한다.
 #{}은 자동으로 ''가 붙어서 이 경우에는 사용할 수 없다. -->